<launch>
    <!--0Sensors.launch-->
    
    <group ns="$(env ROBOT)">
      <node pkg="Launch_v2" name="rename_frame_id" type="rename_frame.py" args="$(find Launch_v2)/0Sensors.yaml $(find Launch_v2)/0Sensors_temp.yaml env_ROBOT"/>
      <rosparam file="$(find Launch_v2)/0Sensors_temp.yaml" command="load"/>
      <node pkg="LMS1xx" type="LMS100" name="topTilted">
	  <remap from ="scan" to="front_top_scan"/>
      </node>
      <node pkg="LMS1xx" type="LMS100" name="frontBottom"/>
      <node pkg="Launch_v2" type="static_transform_publisher_param" name="base_link_to_front_top_lidar"/>
      <node pkg="Launch_v2" type="static_transform_publisher_param" name="base_link_to_front_bottom_lidar"/>
      <node pkg="Launch_v2" type="static_transform_publisher_param" name="base_link_to_camera_front_base"/>
      <node pkg="Launch_v2" type="static_transform_publisher_param" name="camera_front_base_to_img"/>
      <node pkg="uvc_cam" type="uvc_cam_node" name="camera_front" output="screen">
	  <remap from="camera" to="camera_front"/>
      </node>
      <!--1Lowlevel.launch-->
      <!--linuxcnc is not working. halrun.bash failed
      <machine name="arm" address="arm" env-loader="/opt/ros/fuerte/env.sh" user="linuxcnc"/>
      <rosparam command="load" file="$(find lowlevel_hal)/launch/hal_ros_adapter.yaml" ns="hal_ros_adapater"/>
      <node machine="arm" name="hal_module" pkg="lowlevel_hal" type="hal_run.bash" output="screen"/-->
      <machine name="lowlevel" address="golfcart-lowlevel" env-loader="/opt/ros/fuerte/env.sh" user="golfcar"/>
      <node machine="lowlevel" pkg="microstrain_3dmgx2_imu" ns="ms" type="imu_node" name="microstrain_3dmgx2_node" output="screen"/>
      <node machine="lowlevel" pkg="dead_reckoning" name="encoderImu_integrator" type="odom_IMU" output="screen"/>
      <node machine="lowlevel" name="encoders_node" pkg="phidget_encoders" type="encoders_node.py" output="screen"/>
      <node machine="lowlevel" name="encoders_odo_node" pkg="phidget_encoders" type="encoders_odo_node.py" output="screen">
	  <remap from="odom" to="phidget_encoder_odo"/>
      </node>
      
      <!--2Localization-->
      <node name="map_server" pkg="map_server" type="map_server" args="$(find utown_plaza)/map.yaml"/>
      <node name="amcl" pkg="amcl" type="amcl" respawn="false" output="screen">
      <param name="odom_alpha3" value="0.2"/>
      <param name="update_min_d" value="0.2"/>
	  <remap from="scan" to="front_top_scan"/>		
      </node>
      <node pkg="rviz" type="rviz" name="rviz" respawn="false" args="-d $(find utown_plaza)/utown_simulation.vcg" />

      <!--3Autonomous-->
      <node pkg="lowlevel_controllers" type="steering_controller" name="steering_controller"/>
      <node name="speed_controller_fastStop" pkg="lowlevel_controllers" type="speed_controller_fastStop" output="screen">
	  <remap from="encoder_odo" to="encoder_odo"/>
      </node>

      <node pkg="move_base" type="move_base" respawn="false" name="move_base_node" output="screen">
	  <remap from="cmd_vel" to="cmd_steer"/>
	  <remap from="map" to="curb_map"/>
	  <rosparam file="$(find Launch_v2)/move_base/costmap_common_params.yaml" command="load" ns="global_costmap" />
	  <rosparam file="$(find Launch_v2)/move_base/costmap_common_params.yaml" command="load" ns="local_costmap" />
	  <rosparam file="$(find Launch_v2)/move_base/local_costmap_params_close.yaml" command="load" />
	  <rosparam file="$(find Launch_v2)/move_base/global_costmap_params.yaml" command="load" />
      </node>
      <node pkg="dynamic_safety_zone" type="dynamic_safety_zone" name="dynamic_virtual_bumper"/>
      <node name="soundplay_node" pkg="sound_play" type="soundplay_node.py"/>
      <node name="sound_speaker" pkg="sound_speaker" type="sound_speaker" output="screen">
	<param name="sound_path" value="$(find sound_speaker)/sounds/"/>
      </node>

      <!--5SpeedAdvisor-->
      <node pkg="golfcar_route_planner" type="route_planner_node" name="route_planner" output="screen"/>
      <node pkg="speed_advisor" type="speed_advisor" name="speed_advisor" output="screen">
	  <remap from="laser_area_policy/scan" to="sick_scan2"/>
	  <remap from="cmd_vel" to="cmd_speed"/>
	  <!--remap from="move_status" to="move_status_hybrid"/-->
      </node>
    </group>
</launch>