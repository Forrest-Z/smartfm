#include <iostream>
#include <vector>
//DCC_EA #define PATH {1171.00,316.00},{894.00,217.00},{894.00,217.00},{894.00,217.00},{832.67,206.67},{832.67,206.67},{832.67,206.67},{801.33,221.33},{801.33,221.33},{801.33,221.33},{781.00,245.00},{781.00,245.00},{781.00,245.00},{724.00,343.33},{724.00,343.33},{724.00,343.33},{641.33,493.33},{641.33,493.33},{641.33,493.33},{597.33,588.67},{597.33,588.67},{597.33,588.67},{563.00,672.00},{563.00,672.00},{563.00,672.00},{489.33,856.67},{489.33,856.67},{489.33,856.67},{386.00,1165.00},{386.00,1165.00},{386.00,1165.00},{374.00,1224.00},{374.00,1224.00},{374.00,1224.00},{346.00,1722.00},{346.00,1722.00},{346.00,1722.00},{300.00,2216.00},{300.00,2216.00},{300.00,2216.00},{302.00,2285.00},{302.00,2285.00},{302.00,2285.00},{324.00,2331.00},{324.00,2331.00},{324.00,2331.00},{363.00,2347.00},{363.00,2347.00},{363.00,2347.00},{412.00,2334.00},{412.00,2334.00},{412.00,2334.00},{469.00,2318.00},{469.00,2318.00},{469.00,2318.00},{507.00,2271.00},{507.00,2271.00},{507.00,2271.00},{517.00,2239.00},{517.00,2239.00},{517.00,2239.00},{536.00,2192.00},{536.00,2192.00},{536.00,2192.00},{566.00,2147.00},{566.00,2147.00},{566.00,2147.00},{601.33,2100.67},{601.33,2100.67},{601.33,2100.67},{631.33,2068.67},{631.33,2068.67},{631.33,2068.67},{675.33,2033.33},{675.33,2033.33},{675.33,2033.33},{717.33,2012.67},{717.33,2012.67},{717.33,2012.67},{768.67,2000.00},{768.67,2000.00},{768.67,2000.00},{828.67,2004.00},{828.67,2004.00},{828.67,2004.00},{882.67,2024.00},{882.67,2024.00},{882.67,2024.00},{930.00,2060.67},{930.00,2060.67},{930.00,2060.67},{970.00,2109.00},{970.00,2109.00},{970.00,2109.00},{1014.00,2178.00},{1014.00,2178.00},{1014.00,2178.00},{1014.00,2178.00},{1014.00,2178.00}
//EA_DCC #define PATH {1009.00,2130.00},{983.00,2099.00},{983.00,2099.00},{983.00,2099.00},{943.00,2044.00},{943.00,2044.00},{943.00,2044.00},{892.00,2008.00},{892.00,2008.00},{892.00,2008.00},{833.00,1982.00},{833.00,1982.00},{833.00,1982.00},{776.00,1980.00},{776.00,1980.00},{776.00,1980.00},{720.00,1986.00},{720.00,1986.00},{720.00,1986.00},{663.00,2010.00},{663.00,2010.00},{663.00,2010.00},{622.00,2047.00},{622.00,2047.00},{622.00,2047.00},{588.00,2084.00},{588.00,2084.00},{588.00,2084.00},{558.00,2131.00},{558.00,2131.00},{558.00,2131.00},{522.00,2186.00},{522.00,2186.00},{522.00,2186.00},{472.00,2250.67},{472.00,2250.67},{472.00,2250.67},{420.67,2293.33},{420.67,2293.33},{420.67,2293.33},{368.67,2296.67},{368.67,2296.67},{368.67,2296.67},{334.00,2270.00},{334.00,2270.00},{334.00,2270.00},{325.00,2217.00},{325.00,2217.00},{325.00,2217.00},{374.00,1721.00},{374.00,1721.00},{374.00,1721.00},{399.00,1229.00},{399.00,1229.00},{399.00,1229.00},{410.00,1175.00},{410.00,1175.00},{410.00,1175.00},{497.00,912.00},{497.00,912.00},{497.00,912.00},{588.00,683.00},{588.00,683.00},{588.00,683.00},{639.00,561.00},{639.00,561.00},{639.00,561.00},{675.33,481.33},{675.33,481.33},{675.33,481.33},{746.00,353.00},{746.00,353.00},{746.00,353.00},{776.67,294.67},{776.67,294.67},{776.67,294.67},{794.00,266.67},{794.00,266.67},{794.00,266.67},{817.33,244.00},{817.33,244.00},{817.33,244.00},{853.33,233.33},{853.33,233.33},{853.33,233.33},{900.67,248.00},{900.67,248.00},{900.67,248.00},{960.00,266.67},{960.00,266.67},{960.00,266.67},{1006.67,284.67},{1006.67,284.67},{1006.67,284.67},{1028.67,306.67},{1028.67,306.67}
//MCD_DCC
#define PATH {1046.00,2220.00},{1066.00,2271.00},{1066.00,2271.00},{1066.00,2271.00},{1104.00,2348.67},{1104.00,2348.67},{1104.00,2348.67},{1118.00,2406.00},{1118.00,2406.00},{1118.00,2406.00},{1430.00,3062.00},{1430.00,3062.00},{1430.00,3062.00},{1490.00,3177.00},{1490.00,3177.00},{1490.00,3177.00},{1526.00,3229.00},{1526.00,3229.00},{1526.00,3229.00},{1526.00,3229.00},{1526.00,3229.00}
//DCC_MCD !#define PATH {1526.00,3229.00},{1574.67,3230.67},{1574.67,3230.67},{1574.67,3230.67},{1608.00,3185.00},{1608.00,3185.00},{1608.00,3185.00},{1590.67,3130.67},{1590.67,3130.67},{1590.67,3130.67},{1526.00,3108.00},{1526.00,3108.00},{1526.00,3108.00},{1471.33,3094.00},{1471.33,3094.00},{1471.33,3094.00},{1066.00,2271.00},{1066.00,2271.00},{1066.00,2271.00},{1046.00,2220.00},{1046.00,2220.00},{1046.00,2220.00},{1046.00,2220.00},{1046.00,2220.00}
//EA_E3A #define PATH {1868.00,670.00},{1909.00,682.00},{1909.00,682.00},{1909.00,682.00},{1946.00,676.00},{1946.00,676.00},{1946.00,676.00},{1976.67,654.67},{1976.67,654.67},{1976.67,654.67},{1966.67,619.33},{1966.67,619.33},{1966.67,619.33},{1938.00,596.00},{1938.00,596.00},{1938.00,596.00},{1856.00,563.00},{1856.00,563.00},{1856.00,563.00},{1423.00,415.00},{1423.00,415.00},{1423.00,415.00},{1423.00,415.00},{1423.00,415.00}
//E3A_EA #define PATH {1298.00,400.00},{1415.00,434.00},{1415.00,434.00},{1415.00,434.00},{1740.00,545.00},{1740.00,545.00},{1740.00,545.00},{1789.00,573.00},{1789.00,573.00},{1789.00,573.00},{1800.00,610.00},{1800.00,610.00},{1800.00,610.00},{1833.00,650.00},{1833.00,650.00},{1833.00,650.00},{1833.00,650.00},{1833.00,650.00}
using namespace std;

class point
{
public:
	int x,y;
};
int main()
{
	int path[][2]{PATH};
	int path_size = sizeof(path)/sizeof(path[0]);

	vector<point> points;
	bool normal = false;
	if(normal)
	{
		for(int i=0; i<path_size;i++)
		{
			//convert into vector, make it somewhat easier to access the member
			point p;
			p.x = path[i][0];
			p.y = path[i][1];
			points.push_back(p);
		}
	}
	else
	{
		//reverse order
		for(int i=path_size-1; i>=0;i--)
		{
			//convert into vector, make it somewhat easier to access the member
			point p;
			p.x = path[i][0];
			p.y = path[i][1];
			points.push_back(p);
		}
	}
	//only output the non duplicated data
	int count=0;
	for(unsigned int i=0; i<points.size()-1; i++)
	{

		if(points[i+1].x!=points[i].x && points[i+1].y!=points[i].y)
		{
			cout<<'{'<<points[i].x<<','<<points[i].y<<"},";
			count++;
		}

	}
	cout<<'{'<<points[points.size()-1].x<<','<<points[points.size()-1].y<<"},";
	count++;
	cout<<endl<<count<<endl;
	return 0;
}
