#!/usr/bin/env python
PACKAGE = "rrts_ompl"
import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("sample_type", int_t, 0, "obst", 1, 0, 3)

gen.add("mannual_bound_x", double_t, 0, "mannual_bound_x", 100, 0, 1000)
gen.add("mannual_bound_x", double_t, 0, "mannual_bound_x", 200, 0, 1000)

gen.add("mannual_goal_x", double_t, 0, "mannual_goal_x", 20, 0, 1000)
gen.add("mannual_goal_y", double_t, 0, "mannual_goal_y", 10, 0, 1000)

gen.add("mannual_root_x", double_t, 0, "mannual_root_x", 20, 0, 1000)
gen.add("mannual_root_y", double_t, 0, "mannual_root_y", 10, 0, 1000)

# Odometry Model Parameters
# odt = gen.enum([ gen.const("diff_const", str_t, "diff", "Use diff odom model"), gen.const("omni_const", str_t, "omni", "Use omni odom model")], "Odom Models")
#gen.add("odom_model_type", str_t, 0, "Which model to use, either diff or omni", "diff", edit_method = odt)

#gen.add("shutter_control", bool_t, 0, "whether to use shutter control", True)
#gen.add("gain_control", bool_t, 0, "whether to use gain control", False)
#gen.add("visualization", bool_t, 0, "visualization flag of the histogram", True)

#gen.add("p_shutter", double_t, 0, "p coefficient for shutter control", 0.02, 0, 100)
#gen.add("i_shutter", double_t, 0, "i coefficient for shutter control", 0.01, 0, 100)
#gen.add("d_shutter", double_t, 0, "d coefficient for shutter control", 0.01, 0, 100)

#gen.add("u_lim_up_shutter", double_t, 0, "output limit up", 250, 0, 250)
#gen.add("u_lim_down_shutter", double_t, 0, "output limit down", 0, 0, 250)
#gen.add("i_lim_shutter", double_t, 0, "integral error lim", 100, 0, 255)
#gen.add("delta_u_lim_shutter", double_t, 0, "delta_u_lim", 5, 0, 250)

#gen.add("p_gain", double_t, 0, "p coefficient for gain control", 0.02, 0, 100)
#gen.add("i_gain", double_t, 0, "i coefficient for gain control", 0.02, 0, 100)
#gen.add("d_gain", double_t, 0, "d coefficient for gain control", 0.02, 0, 100)

#gen.add("u_lim_up_gain", double_t, 0, "output limit up", 250, 0, 250)
#gen.add("u_lim_down_gain", double_t, 0, "output limit down", 0, 0, 250)
#gen.add("i_lim_gain", double_t, 0, "integral error lim", 100, 0, 255)
#gen.add("delta_u_lim_gain", double_t, 0, "delta_u_lim", 50, 0, 250)

exit(gen.generate(PACKAGE, "rrts_ompl", "rrts_ompl"))