



































#ifndef KdScT
#define KdScT
#include <RMLVelocityInputParameters.h>
#include <RMLVelocityOutputParameters.h>
#include <RMLVector.h>
#include <TypeIVRMLPolynomial.h>
#include <RMLVelocityFlags.h>
using namespace diBqY;






































class XdeRR{public:


















XdeRR(const unsigned int&vaLZW,const double&g_7EY);














XdeRR(const XdeRR&ruPUE);





~XdeRR(void);








XdeRR&operator=(const XdeRR&ruPUE);












































































int r3iK7(const RMLVelocityInputParameters&OiLd5,RMLVelocityOutputParameters*
BKZrh,const RMLVelocityFlags&lweG4);























































int Rsvr1(const double&jE9zt,RMLVelocityOutputParameters*BKZrh)const;protected:





enum Jed74{
s8mhe=false,
s8ZpY=true};





















































void tXZZr(const RMLVelocityInputParameters&OiLd5,RMLVelocityOutputParameters*
BKZrh);





















void uPAx7(void);




















void EVkPW(void);





















void lBXh0(void);

























void LN3RK(void);




































int Lpkdh(const double&jE9zt,RMLVelocityOutputParameters*YfM6p)const;
















































bool KSiWK(void);



















































void p9TIk(const double&jE9zt,RMLVelocityOutputParameters*YfM6p)const;








































void AiU37(RMLVelocityOutputParameters*YfM6p)const;



























void cxolA(void);










bool GXBSW;









bool dBmd_;







bool Z5biL;








int ReturnValue;







unsigned int NumberOfDOFs;







unsigned int S5k0a;







double CycleTime;








double SynchronizationTime;









double ZIk1w;














RMLVelocityFlags LUQbj;












RMLBoolVector*htx_f;












RMLBoolVector*zRNIW;









RMLIntVector*qnqrm;








RMLDoubleVector*ExecutionTimes;









RMLDoubleVector*q6cTW;









RMLDoubleVector*tpjD5;









RMLDoubleVector*KSW1w;









RMLDoubleVector*J49Ku;










RMLDoubleVector*nqgQB;










RMLDoubleVector*NJ168;








RMLDoubleVector*SiVEj;















RMLVelocityInputParameters*N_62O;









RMLVelocityInputParameters*mYHVu;













RMLVelocityOutputParameters*aPlEw;











_rZSi*Polynomials;};
#endif

