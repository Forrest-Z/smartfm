#!/bin/bash

#-------------------------------------------------------------------------------
# This script runs several simulations with different values of lambda_ped
# and lambda_veh, much as flow_sim_exploration does, except that each simulation
# is ran in a different process (using flow_sim_unit), which allow to distribute
# the load across different nodes. GNU parallel is used to handle the
# distribution process.
#-------------------------------------------------------------------------------

# verify that GNU parallel is available
# first verify that there is a parallel command
command -v parallel >/dev/null 2>&1 || { echo This requires GNU parallel >&2; exit 1; }

# then verify that this is actually GNU parallel
if [ -z "`parallel -V | head -n 1 | grep 'GNU parallel'`" ]
then
    echo This requires GNU parallel >&2
    exit 1
fi

# values for lambda_veh and lambda_ped
lvs="0.80 0.60 0.40 0.30 0.20 0.10 0.01"
lps="0.40 0.20 0.10 0.07 0.04 0.01 0.00"
# lvs="0.75 0.5 0.25 0.1 0.05 0.01"
# lps="0.25 0.1 0.05 0.01"
# lvs="0.50 0.30"
# lps="0.01 0.00"

#
# options

opts=""

# uncomment next line to distribute to a different computer
# GNU parallel must be installed, as well as flow_sim_unit
# Check GNU parallel documentation
opts="$opts --sshlogin FMAutonomy,: --cleanup --return lv_{1}_lp_{2}.dat.gz"

# report progress
opts="$opts --progress"


flow_sim_opts="--lv={1} --lp={2} --logfile=lv_{1}_lp_{2}.dat.gz"
flow_sim_opts="$flow_sim_opts --veh_max_vel=6"

# this command is a bit cryptic. Check GNU parallel documentation
parallel $opts flow_sim_unit.py $flow_sim_opts ::: $lvs ::: $lps

tar cf result_logs.tar lv_*_lp_*
rm lv_*_lp_*